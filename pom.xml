<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.extact</groupId>
		<artifactId>msa-spring-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../msa-spring-parent/pom.xml</relativePath>
	</parent>
	<artifactId>msa-spring-service-user</artifactId>
	<packaging>jar</packaging>
	<name>msa-spring-service-user</name>
	<description>rms user service module</description>

	<repositories>
		<repository>
			<id>github</id>
			<name>GitHub Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/extact-io/msa-spring-parent</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<properties>
		<mainClass>io.extact.msa.rms.user.webapi.UserAccountWebApiMain</mainClass>
		<image.name>msa-service-user</image.name>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.helidon</groupId>
				<artifactId>helidon-dependencies</artifactId>
				<version>3.2.1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback.access</groupId>
			<artifactId>logback-access-tomcat</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>io.extact</groupId>
			<artifactId>msa-spring-test-lib</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.extact</groupId>
			<artifactId>msa-spring-platform-fw-test-lib</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>


		<!-- ======================================== -->
		<!-- *** rms module dependencies ***              -->
		<!-- ======================================== -->
		<dependency>
			<groupId>io.extact</groupId>
			<artifactId>msa-spring-test-lib</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.extact</groupId>
			<artifactId>msa-spring-platform-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.extact</groupId>
			<artifactId>msa-spring-platform-fw</artifactId>
		</dependency>
		<dependency>
			<groupId>io.extact</groupId>
			<artifactId>msa-spring-platform-fw-test-lib</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- ======================================== -->
		<!-- *** provided scope dependencies ***      -->
		<!-- ======================================== -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- ======================================== -->
		<!-- *** compile scope dependencies(APIs) *** -->
		<!-- ======================================== -->
		<!-- dependent JakartaEE APIs -->
		<!-- for service/domain layer dependency -->
		<dependency>
			<groupId>jakarta.inject</groupId>
			<artifactId>jakarta.inject-api</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.enterprise</groupId>
			<artifactId>jakarta.enterprise.cdi-api</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.transaction</groupId>
			<artifactId>jakarta.transaction-api</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
		</dependency>
		<!-- for webapi -->
		<dependency>
			<groupId>jakarta.ws.rs</groupId>
			<artifactId>jakarta.ws.rs-api</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.json.bind</groupId>
			<artifactId>jakarta.json.bind-api</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.security.enterprise</groupId>
			<artifactId>jakarta.security.enterprise-api</artifactId>
		</dependency>

		<!-- dependent MicroProfile APIs -->
		<dependency>
			<groupId>org.eclipse.microprofile.config</groupId>
			<artifactId>microprofile-config-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.health</groupId>
			<artifactId>microprofile-health-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.openapi</groupId>
			<artifactId>microprofile-openapi-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.opentracing</groupId>
			<artifactId>microprofile-opentracing-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.fault-tolerance</groupId>
			<artifactId>microprofile-fault-tolerance-api</artifactId>
		</dependency>

		<!-- ======================================== -->
		<!-- *** runtime scope dependencies ***       -->
		<!-- ======================================== -->
		<!-- for MicroProfile runtimes -->
		<dependency>
			<groupId>io.helidon.microprofile.server</groupId>
			<artifactId>helidon-microprofile-server</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.microprofile.openapi</groupId>
			<artifactId>helidon-microprofile-openapi</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.microprofile</groupId>
			<artifactId>helidon-microprofile-cors</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.microprofile</groupId>
			<artifactId>helidon-microprofile-access-log</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.webserver</groupId>
			<artifactId>helidon-webserver-access-log</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.config</groupId>
			<artifactId>helidon-config-encryption</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.microprofile.tracing</groupId>
			<artifactId>helidon-microprofile-tracing</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.tracing</groupId>
			<artifactId>helidon-tracing-jaeger</artifactId>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-jdk14</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- for to use platform-module runtimes -->
		<dependency>
			<groupId>io.helidon.microprofile.health</groupId>
			<artifactId>helidon-microprofile-health</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.health</groupId>
			<artifactId>helidon-health-checks</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- for JTA runtimes -->
		<dependency>
			<groupId>io.helidon.integrations.cdi</groupId>
			<artifactId>helidon-integrations-cdi-jta-weld</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.integrations.cdi</groupId>
			<artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.integrations.cdi</groupId>
			<artifactId>helidon-integrations-cdi-jpa</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.integrations.cdi</groupId>
			<artifactId>helidon-integrations-cdi-eclipselink</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- for persistence.file package -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!--
		The jackson dependency was removed in the following issue,
		but the dependency was added provisionally because the alternative method is unknown.
		https://github.com/oracle/helidon/issues/1109
		-->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
		</dependency>

		<!-- for BeanValidation runtimes -->
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-bean-validation</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>jakarta.el</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- for jax-rs ext runtime -->
		<!-- for binding to application/json. It won't work without this -->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-binding</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- ======================================== -->
		<!-- *** test scope dependencies ***      -->
		<!-- ======================================== -->
		<dependency>
			<groupId>io.helidon.microprofile.rest-client</groupId>
			<artifactId>helidon-microprofile-rest-client</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
